#Ben Schackman
#Making a Menu 6/23/2021
#first part of the final project

import os, pygame, math, random, time, sys

from pygame.draw import rect
from pygame.time import delay 

os.system('cls')
pygame.init()
pygame.time.delay(75)
#making the screen
WIDTH=800
HEIGHT=800
Rows=3
Colums=3
Wbox=25
screen = pygame.display.set_mode((WIDTH,HEIGHT))
pygame.display.set_caption("TIC TAC TOE GAME")
#Define Colors
BLACK=[0,0,0]
WHITE=[255,255,255]
RED=[255,0,0]

TitleFont= pygame.font.SysFont("comicsans", 70)  #set the type of font and the size 
WordFont=pygame.font.SysFont("comicsans", 50)
LetterFont=pygame.font.SysFont("comicsans",40)

click=False
def game_Init(message):
    test=True
    while test:
        pygame.time.delay(500)
        screen.fill(WHITE)
        textPRINT= TitleFont.render("Menu", 1, BLACK)
        screen.blit(textPRINT, (WIDTH/2 - textPRINT.get_width()/2, HEIGHT/2 - textPRINT.get_height()/2))
pygame.display.update()
pygame.time.delay(2000)

       
        #Print message
screen.fill(WHITE)
text = WordFont.render("TICTACTOE", 1, BLACK)
screen.blit(text, (WIDTH/2 - text.get_width()/2, round(HEIGHT/3)))
       
        #rect1
rect1=pygame.Rect(50, 350, Wbox*4,Wbox*2)
pygame.draw.rect(screen, BLACK, rect1, width=1)
text = LetterFont.render("level 1", 1, BLACK)
screen.blit(text, (50 , 350))
       
        #rect 2
rect2=pygame.Rect(200, 350, Wbox*4,Wbox*2)
pygame.draw.rect(screen, BLACK, rect2, width=1)
text = LetterFont.render("level 2", 1, BLACK)
screen.blit(text, (200 , 350))

Rect3=pygame.Rect(350,350, Wbox*4,Wbox*2)
pygame.draw.rect(screen, BLACK, Rect3, width=1)
text = LetterFont.render("Level3", 1, BLACK)
screen.blit(text, (350 , 350))

Rect4=pygame.Rect(500,350, Wbox*7,Wbox*2)
pygame.draw.rect(screen, BLACK, Rect4, width=1)
text = LetterFont.render("EXIT GAME", 1, BLACK)
screen.blit(text, (500 , 350))

Rect5=pygame.Rect(350,500, Wbox*5,Wbox*2)
pygame.draw.rect(screen, BLACK, Rect5, width=1)
text = LetterFont.render("SCORES", 1, BLACK)
screen.blit(text, (350 , 500))

for event in pygame.event.get():
    pygame.display.update()  
if event.type == pygame.QUIT:
    pygame.quit()
    sys.exit() 
if event.type == pygame.MOUSEBUTTONDOWN:
    mx,my= pygame.mouse.get_pos()
    if rect1.collidepoint((mx,my)):
        text = LetterFont.render("Level1!!", 1, BLACK)
        screen.blit(text, (WIDTH/2-text.get_width()/2, HEIGHT/2))
                #call main function
    print("Level 1!!")
    pygame.display.update()
    pygame.time.delay(500)
    if rect2.collidepoint((mx,my)):
        text = LetterFont.render("Level2!!", 1, BLACK)
    screen.blit(text, (WIDTH/2-text.get_width()/2, HEIGHT/2))
    print("Level 2!!")
    pygame.display.update()
    pygame.time.delay(500)
    if Rect3.collidepoint((mx,my)):
        text = LetterFont.render("Level3!!", 1, BLACK)
    screen.blit(text, (WIDTH/2-text.get_width()/2, HEIGHT/2))
    print("Level 3!!")
    pygame.display.update()
    pygame.time.delay(500)
    pygame.display.update()
    pygame.time.delay(500)
    if Rect4.collidepoint((mx,my)):
        text = LetterFont.render("EXIT!!", 1, BLACK)
    screen.blit(text, (WIDTH/2-text.get_width()/2, HEIGHT/2))
    print("EXIT GAME")
    pygame.display.update()
    pygame.time.delay(500)
    text = LetterFont.render("ScoreBoard!!", 1, BLACK)
    screen.blit(text, (WIDTH/2-text.get_width()/2, HEIGHT/2))
    if Rect5.collidepoint((mx,my)):
        text = LetterFont.render("ScoreBoard!!", 1, BLACK)
    screen.blit(text, (WIDTH/2-text.get_width()/2, HEIGHT/2))
    print("ScoreBoard")
    pygame.display.update()
    pygame.time.delay(500)
        
test=False


def main():
    check=True 
    while check:
        for event in pygame.event.get():
            if event.type== pygame.QUIT:
                check= False
        screen.fill(WHITE)
        print("Level 1")
        print("Level 2")
        print("Level 3")


pygame.quit()
sys.exit() 

        

